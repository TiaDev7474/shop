// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  // Uses direct connection, ⚠️ make sure to keep this to `POSTGRES_URL_NON_POOLING`
  // or you'll have dangling databases from migrations
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model User {
  id        String   @id
  email     String   @unique
  password  String
  name      String?
  orders    Order[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Product {
  id             Int            @id @default(autoincrement())
  name           String
  description    String
  price          Float
  stock          Int
  orders         OrderProduct[]
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt
  category       Category?      @relation(fields: [categoryId], references: [category_id])
  categoryId     Int?
  manufacturer   Manufacturer?  @relation(fields: [manufacturerId], references: [manufacturer_id])
  manufacturerId Int?
}

model Category {
  category_id Int       @id @default(autoincrement())
  title       String
  value       String
  products    Product[]
}

model Manufacturer {
  manufacturer_id Int       @id @default(autoincrement())
  name            String
  products        Product[]
}

model Order {
  id              Int       @id @default(autoincrement())
  userId          String
  total           Float
  status          String    @default("pending")
  deliveryAddress String
  deliveryDate    DateTime?
  deliveryStatus  String    @default("preparing")
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt

  user     User           @relation(fields: [userId], references: [id])
  products OrderProduct[]
}

model OrderProduct {
  id        Int @id @default(autoincrement())
  orderId   Int
  productId Int
  quantity  Int

  order   Order   @relation(fields: [orderId], references: [id])
  product Product @relation(fields: [productId], references: [id])
}
